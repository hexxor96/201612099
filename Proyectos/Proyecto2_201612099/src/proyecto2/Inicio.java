package proyecto2;

public class Inicio extends javax.swing.JFrame {
        
	private int contadorAviones = 1;
	private int numeroAviones = 0;
	private int contadorTurno = 1;
	private ColaSimple colaSimple = new ColaSimple();
	private int contadorPasajeros = 1;
        private ColaDoblementeEnlazada cola = new ColaDoblementeEnlazada();
	private ListaDoblementeEnlazada listaEscritorios = new ListaDoblementeEnlazada();
	private ListaDobleCircular listaMaletas = new ListaDobleCircular();
	private ColaSimpleAviones colaAviones = new ColaSimpleAviones();
	private ListaSimple listaMantenimiento = new ListaSimple();
        public int turnos;
        
    public Inicio(){  
        initComponents();        
    }
	public void graficar(){

		String texto = "digraph G { \n";
		texto += "node [shape=box,style=filled,color=black,fontcolor=white,fontname=\"Helvetica\"]; \n";
		texto += ColaDoblementeEnlazada.escribirDOT(cola);
		texto += ColaSimple.escribirDOT(colaSimple);
		texto += ListaDoblementeEnlazada.escribirDOT(listaEscritorios);
		texto += ListaDobleCircular.escribirDOT(listaMaletas);
		texto += ColaSimpleAviones.escribirDOT(colaAviones);
		texto += ListaSimple.escribirDOT(listaMantenimiento);
		texto += "}";
		String outputFilename = "Results.txt";
	}
        
	public void escribirEnConsola(String cadena){
		String actual = textEdit1.getText();
		actual = cadena;
		textEdit1.setText(actual);
	}
        
	public void desabordaje(ColaDoblementeEnlazada cola){
		if (cola.primero != null){
			if (cola.primero.avion.desabordaje > 0){
				escribirEnConsola("Avion desbordando: " + cola.primero.avion.id + ".\n");
				cola.primero.avion.desabordaje--;
			}
			else{
				for (int i = 1;i <= cola.primero.avion.pasajeros;i++){
					Pasajero pasajero = ColaSimple.crearPasajero(contadorPasajeros,cola.primero.avion.id);
					ColaSimple.queue(colaSimple,pasajero);
					for (int j = 0; j < pasajero.maletas; j++){
						ListaDobleCircular.insertar(listaMaletas);
					}
					contadorPasajeros++;
				}
				escribirEnConsola("Avion " + cola.primero.avion.id + " pasa a estacion de mantenimiento.\n");
				ColaSimpleAviones.queue(colaAviones,cola.primero.avion);
				ColaDoblementeEnlazada.dequeue(cola);
			}
		}
	}

	public void registrarPasajeros(){
		ldNodo aux = listaEscritorios.primero;
		while (aux != null){
			if (aux.escritorio.cola.length < 10){
				while (primero(cola) != 0 && aux.escritorio.cola.length < 10)
				{
					ColaSimple.queue(aux.escritorio.cola, ColaSimple.primero(colaSimple));
					ColaSimple.dequeue(colaSimple);
				}
				aux = aux.siguiente;
			}
			else{
				aux = aux.siguiente;
			}
		}
	}
        
	public void atender(){
		ldNodo aux = listaEscritorios.primero;
		while (aux != null){
			if (aux.escritorio.cola.primero != null){
				if (aux.escritorio.cola.primero.pasajero.numeroTurnos > 0){
					if (aux.escritorio.pilaDocumentos.length != aux.escritorio.cola.primero.pasajero.documentos){
						for (int i = 0; i < aux.escritorio.cola.primero.pasajero.documentos;i++){
							Pila.push(aux.escritorio.pilaDocumentos);
						}
					}
					aux.escritorio.cola.primero.pasajero.numeroTurnos--;
				}
				else{
					for (int i = 0;i < aux.escritorio.cola.primero.pasajero.maletas;i++){
						ListaDobleCircular.eliminar(listaMaletas);
					}
					for (int i = 0;i < aux.escritorio.cola.primero.pasajero.documentos;i++)
					{
						Pila.pop(aux.escritorio.pilaDocumentos);
					}

					ColaSimple.dequeue(aux.escritorio.cola);
				}
			}
			aux = aux.siguiente;
		}
	}
        
	public void darMantenimiento(){
		sNodo aux = listaMantenimiento.primero;
		while (aux != null){
			if (aux.avion == null){
				if (colaAviones.primero != null)
				{
					aux.avion = colaAviones.primero.avion;
					ColaSimpleAviones.dequeue(colaAviones);
				}
				aux = aux.siguiente;
			}
			else{
				if (aux.avion.mantenimiento > 0){
					aux.avion.mantenimiento--;
					aux = aux.siguiente;
				}
				else{
					aux.avion = null;
					aux = aux.siguiente;
				}
			}
		}
	}
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrollArea = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        textEdit1 = new javax.swing.JTextArea();
        txtAviones = new javax.swing.JTextField();
        txtEscritorios = new javax.swing.JTextField();
        txtEstaciones = new javax.swing.JTextField();
        txtTurnos = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        inicio = new javax.swing.JButton();
        btnTurno = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        CheckBox = new javax.swing.JCheckBox();
        label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textEdit1.setColumns(20);
        textEdit1.setRows(5);
        jScrollPane2.setViewportView(textEdit1);

        txtAviones.setText("jTextField1");

        txtEscritorios.setText("jTextField2");

        txtEstaciones.setText("jTextField3");

        txtTurnos.setText("jTextField4");

        jLabel1.setText("jLabel1");

        jLabel2.setText("jLabel2");

        jLabel3.setText("jLabel3");

        jLabel4.setText("jLabel4");

        inicio.setText("jButton1");
        inicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicioActionPerformed(evt);
            }
        });

        btnTurno.setText("jButton2");
        btnTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTurnoActionPerformed(evt);
            }
        });

        btnImprimir.setText("jButton3");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        CheckBox.setText("jCheckBox1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inicio)
                                    .addComponent(btnImprimir)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnTurno)
                                        .addGap(18, 18, 18)
                                        .addComponent(CheckBox)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTurnos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEstaciones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAviones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEscritorios, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 192, Short.MAX_VALUE)
                        .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)))
                .addComponent(ScrollArea, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ScrollArea))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTurnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1))
                            .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAviones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEscritorios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEstaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(32, 32, 32)
                        .addComponent(inicio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTurno)
                            .addComponent(CheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnImprimir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicioActionPerformed
        //Limpia el contador de aviones
		contadorAviones = 1;
		contadorTurno = 1;
		textEdit1.setText("");
		//Obtener el número de aviones para la simulación
		if (txtAviones.getText() == ""){
		}
		else{
			int numeroAviones = Integer.parseInt(txtAviones.getText());
		}
		ListaDoblementeEnlazada.crearLista(listaEscritorios);
		if (txtEscritorios.getText() == ""){
		}
		else{
                        int numeroEscritorios = Integer.parseInt(txtEscritorios.getText());
			ListaDoblementeEnlazada.crearEscritorios(listaEscritorios,numeroEscritorios);
			listaEscritorios.numeroEscritorios = numeroEscritorios;
		}
		ListaDobleCircular.crearLista(listaMaletas);
		ColaDoblementeEnlazada.crearCola(cola);
                ListaSimple.crearLista(listaMantenimiento);
		if (txtEstaciones.getText() == ""){
		}
		else{
                    int numeroEstaciones = Integer.parseInt(txtEstaciones.getText());
                    ListaSimple.crearEstaciones(listaMantenimiento, numeroEstaciones);
		}
    }//GEN-LAST:event_inicioActionPerformed

    private void btnTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTurnoActionPerformed
                        if (txtTurnos.getText().equals("")){
                            int numeroTurnos = Integer.parseInt(txtTurnos.getText());
			if (numeroTurnos > 0){
                                escribirEnConsola("/////////////////Turno " + contadorTurno + "////////////////\n");
				contadorTurno++;
				if (contadorAviones <= numeroAviones){
					Avion nuevo = ColaDoblementeEnlazada.crearAvion(contadorAviones);
					ColaDoblementeEnlazada.queue(cola, nuevo);
					escribirEnConsola("Arriba³ el avion numero " + contadorAviones + ".\n");
					contadorAviones++;
				}
				desabordaje(cola);
				registrarPasajeros();
				atender();
				darMantenimiento();
				escribirEnConsola("Pasajeros en cola para ser atendidos: " + colaSimple.length + ".\n");
				escribirEnConsola(ListaDoblementeEnlazada.escribirInformacion(listaEscritorios));
				escribirEnConsola("Cantidad de maletas en el sistema: " + listaMaletas.length + ".\n");
				escribirEnConsola(ListaSimple.escribirInformacion(listaMantenimiento));
				escribirEnConsola("///////////////Fin turno " + (contadorTurno - 1) + "///////////////\n");
				if (CheckBox.isSelected()){
					graficar();
				}                      
                                turnos = numeroTurnos - 1; 
                                String tturnos = String.valueOf(turnos);
				txtTurnos.setText(tturnos);
			}
		}
    }//GEN-LAST:event_btnTurnoActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        graficar();
    }//GEN-LAST:event_btnImprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckBox;
    private javax.swing.JScrollPane ScrollArea;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnTurno;
    private javax.swing.JButton inicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label;
    private javax.swing.JTextArea textEdit1;
    private javax.swing.JTextField txtAviones;
    private javax.swing.JTextField txtEscritorios;
    private javax.swing.JTextField txtEstaciones;
    private javax.swing.JTextField txtTurnos;
    // End of variables declaration//GEN-END:variables
}
